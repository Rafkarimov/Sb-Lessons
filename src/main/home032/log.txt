Условия по ДЗ

Должен быть реализован класс Книга, содержащий название и автора. Также должен быть реализован класс Посетитель,
содержащий имя посетителя и идентификатор (null до тех пор пока не возьмет книгу). Должен быть реализован класс
Библиотека со следующим функционалом:
Работа со списком существующих книг в библиотеке.
Сюда входят все добавленные книги, в том числе и одолженные. Название книги считается уникальным, и в библиотеке не
может быть двух книг с одинаковым названием.
1.	Добавить новую книгу в библиотеку, если книги с таким наименованием ещё нет в библиотеке. Если книга в настоящий
момент одолжена, то считается, что она всё равно есть в библиотеке (просто в настоящий момент недоступна).
2.	Удалить книгу из библиотеки по названию, если такая книга в принципе есть в библиотеке и она в настоящий момент
не одолжена.
3.	Найти и вернуть книгу по названию.
4.	Найти и вернуть список книг по автору.
Механизм одалживания книги посетителю. Каждый посетитель в один момент времени может читать только одну книгу.
5.	Одолжить книгу посетителю по названию, если выполнены все условия:
a.	Она есть в библиотеке.
b.	У посетителя сейчас нет книги.
c.	Она не одолжена.
Также если посетитель в первый раз обращается за книгой — дополнительно выдать ему идентификатор читателя.
6.	Вернуть книгу в библиотеку от посетителя, который ранее одалживал книгу. Не принимать книгу от другого посетителя.
a.	Книга перестает считаться одолженной.
b.	У посетителя не остается книги.
Тестирование.
7.	В методе main написать несколько тестов на реализованный функционал.
Дополнительная задача*:
8.	Добавить функционал оценивания книг посетителем при возвращении в библиотеку. Оценка книги рассчитывается как
среднее арифметическое оценок всех посетителей, кто брал эту книгу. Реализовать метод, возвращающий оценку книги по
её наименованию.

---------------------------------------------------------------------------
Процесс реализации

1. Реализуем класс Book книга, который содержит следующие приватные поля:
автор книги - author
название книги - title
......................
не обязательные условия
год выпуска книги - year
количество страниц - pages
уникальный номер книги - isbn
.......................

Создаем конструктор для всех полей. Создаем Getter методы для полей.

2. Создаем класс Library - библиотека
2.1. Для работы со списком книг мы реализуем текстовый файл с называнием listOfBook.txt - список книг. В нем будут
хранится все имеющиеся в наличии книги, с полями указанными в п.1.
2.2. Создаем через метод Scanner и switch ввод пользовательского меню для реализации возможности:
Пункты прописываются исходя из логики, при реализации программы лишние цифры слева можно удалить для понимания.
-----------------------------------------------------------------------------------------------------------
            0.-выход (прекращение программы).
-----------------------------------------------------------------------------------------------------------
            1.-авторизация пользователя:
                1.1. библиотекарь (доступна по паролю):
                    1.1.0 - вернуться в основное меню
                    1.1.1.-добавления книг (доступно только - библиотекарь)
                        ввод книги: автор книги(author), название книги(title)
                    1.1.2.-удаления книг (доступно только - библиотекарь)
                        удаление книги: автор книги(author), название книги(title)
                    1.1.3. - посмотреть рейтинг книги:
                                -введите - наименованию книги (после ввода и отображения результата):
                                - нажмите 0 - чтоб вернуться в основное меню,
                                - нажмите 1 - для возврата в меню пользователя
                1.2. посетитель -если пользователь зарегистрирован,
                    1.2.0. - вернутся в основное меню
                    1.2.1. - Найти и вернуть книгу по названию
                            - введите название книги
                    1.2.1. - Найти и вернуть список книг по автору
                            - введите автора
                    1.2.3 - Одолжить книгу (условия):
                                             - a.	Она есть в библиотеке.
                                             - b.	У посетителя сейчас нет книги.
                                             - c.	Она не одолжена.
                    1.2.4 - вернуть книгу, и попросить оставить оценку книги:
                            - сообщить какую посетитель вернул книгу (исходя из логики что у посетителя только 1 книга)
                            - введите оценку от по шкале от 1-5, где 1 - плохо, а 5 отлично
                            - нажмите 0 - чтоб вернуться в основное меню
                    1.2.5 - посмотреть рейтинг книги:
                            -введите - наименованию книги (после ввода и отображения результата):
                                - нажмите 0 - чтоб вернуться в основное меню,
                                - нажмите 1 - для возврата в меню пользователя

                если пользователь не зарегистрирован:
                 - введите - 0 для возврата в основное меню
                 - введите - 1 для перехода к регистрации
-----------------------------------------------------------------------------------------------------------
            2.-регистрация пользователя
                2.0. - выйти в основное меню
                2.1. - Введите Имя
                2.2. - Введите Фамилию
                на выходе показывает, что "Имя Фамилия - уникальный номер читателя".
---------------------------------------------------------------------------------------------

-
Чтоб у нас никто не мог удалять и добавлять книги без нашего ведома введем в меню возможность авторизации с паролем:
по умолчанию логин: Admin пароль: 1. Для этого добавим раздел в меню авторизоваться как библиотекарь или как посетитель.
В случаение использования пункта библиотекарь, предлагается ввести логин и пароль, которые написаны выше, после авторизации
появляется возможность удалить или добавить книгу. Удаленные книги будут помещаться в файл delBooks.txt, все добавленные
будут добавляться в файл уже созданный  listOfBook.txt.
2.3. При авторизации посетителя реализовать логику с использованием файла listOfBook.txt, который будет искать
 - 3.	Найти и вернуть книгу по названию.
 - 4.	Найти и вернуть список книг по автору.
2.4. Реализовать возможность одалживания книги исходя из заданных условий

 - a.	Она есть в библиотеке.
 - b.	У посетителя сейчас нет книги.
 - c.	Она не одолжена.

 пункт - а реализовать с поиском книги по библиотеке из файла listOfBook.txt.
 пункт - б - реализовать исходя из реализации привязки уникального номера пользователя, который выдается при первой регистрации пользователю.
 пункт - c - проверка в списке книг, которые находятся в библиотеки не одолжены.

2.5. Реализовать возможность через меню возвращать книгу от посетителя и оставить свою оценку для реализации п.5.
В этом случае статус книги в библиотеке меняется
на не одолжена и у посетителя нет одолженных книг.

3. Создаем класс Visitor - посетитель, содержащий имя посетителя и идентификатор (null до тех пор пока не возьмет книгу).
3.1. Реализуем логику с использованием класса Library, при которой посетитель выбирает пункт меню посетитель.

4. Реализовать класс main с тестами.

5. Реализовать класс для приема сведений по оценкам посетителей.
       Оценка книги рассчитывается как среднее арифметическое оценок всех посетителей, кто брал эту книгу.
       Реализовать метод, возвращающий оценку книги по её наименованию. Внести возможность как для администратора так
       и для посетителя посмотреть среднюю оценку по выбранной книге через меню.

